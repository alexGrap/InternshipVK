package handlers

import (
	"fmt"
	"fsm/internal/keyboards"
	"fsm/internal/models"
	"fsm/internal/usecase"
	"fsm/pkg/repository"
	fsm "github.com/vitaliy-ukiru/fsm-telebot"
	tele "gopkg.in/telebot.v3"
	"log"
	"os"
	"strconv"
)

var (
	BaseSG     = fsm.NewStateGroup("base")
	TaleState  = BaseSG.New("Tale")
	SpeakState = BaseSG.New("Speak")
	GenreState = BaseSG.New("Genre")
	OtherState = BaseSG.New("Other")
	AdminState = BaseSG.New("Admin")
)

func StartHandlers(bot *tele.Group, manager *fsm.Manager) {
	bot.Handle("/start", onStart)
	bot.Handle("/admin", sendAdmin)
	bot.Handle("/help", helper)
	manager.Bind("/state", fsm.AnyState, func(c tele.Context, state fsm.FSMContext) error {
		s := state.State()
		return c.Send(s.String())
	})

	// buttons
	manager.Bind(&keyboards.FindBtn, fsm.AnyState, onTaleChoose(keyboards.OurTaleBtn, keyboards.OwnTaleBtn,
		keyboards.CancelBtn))
	manager.Bind(&keyboards.GenreBtn, fsm.AnyState, onGenreChoose(keyboards.FairyBtn, keyboards.PoemBtn,
		keyboards.DramaBtn, keyboards.CancelBtn))
	manager.Bind(&keyboards.SpeechBtn, fsm.AnyState, onSpeechChoose(keyboards.TextBtn, keyboards.YandexBtn,
		keyboards.CancelBtn))
	manager.Bind(&keyboards.InfoBtn, fsm.AnyState, onInfoChoose(keyboards.GetSleepingInfoBtn,
		keyboards.SleepingAdviceBtn, keyboards.CancelBtn))
	manager.Bind(&keyboards.CancelBtn, fsm.AnyState, onCancelForm())
	manager.Bind(&keyboards.UserBtn, fsm.AnyState, userInformation)

	//// form
	manager.Bind(&keyboards.TextBtn, SpeakState, setSpeak("–¢–µ–∫—Å—Ç"))
	manager.Bind(&keyboards.YandexBtn, SpeakState, setSpeak("Yandex"))

	manager.Bind(&keyboards.DramaBtn, GenreState, setGenre("–î—Ä–∞–º–∞"))
	manager.Bind(&keyboards.FairyBtn, GenreState, setGenre("–°–∫–∞–∑–∫–∞"))
	manager.Bind(&keyboards.PoemBtn, GenreState, setGenre("–ü–æ—ç–º–∞"))

	manager.Bind(&keyboards.OurTaleBtn, TaleState, generateTail)
	manager.Bind(&keyboards.OwnTaleBtn, TaleState, waitOwnState(keyboards.CancelBtn))
	manager.Bind(tele.OnText, TaleState, choosingTitle)

	manager.Bind(&keyboards.GetSleepingInfoBtn, OtherState, sendInfo)
	manager.Bind(&keyboards.SleepingAdviceBtn, OtherState, sendAdvice)

	manager.Bind(&keyboards.AdminYandexBtn, fsm.AnyState, yandexToZero)
	manager.Bind(&keyboards.AdminSendlerBtn, fsm.AnyState, startSendler(keyboards.CancelBtn))
	manager.Bind(tele.OnText, AdminState, sendler)

}

func onStart(c tele.Context) error {
	var body models.User
	body.UserId = c.Sender().ID
	repository.CreateUser(body)
	log.Println("new user", c.Sender().ID)

	c.Send(
		fmt.Sprintf("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-—Ä–∞—Å—Å–∫–∞–∑—á–∏–∫, %s üìï\n", c.Sender().FirstName), keyboards.OnStartKB())

	return c.Send("–î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è VK. –ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥—É–º–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞—Ç—å —É–¥–æ–±–Ω–æ–≥–æ –±–æ—Ç–∞, " +
		"–∫–æ—Ç–æ—Ä—ã–π –±—ã –∏—Å–∫–∞–ª –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –¥–µ–ª–∞–ª –±—ã –∏–∑ –Ω–µ–≥–æ –∞—É–¥–∏–æ–∫–Ω–∏–≥—É. –¢–∞–∫ " +
		"–∫–∞–∫ –±–û–ª—å—à–∞—è —á–∞—Å—Ç—å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º –∞–≤—Ç–æ—Ä—Å–∫–æ–≥–æ –ø—Ä–∞–≤–∞, –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è" +
		" Chat GPT –æ—Ç OpenAi –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞, –∞ —Ç–æ—á–Ω–µ–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –æ—Ç—Ä—ã–≤–∫–∞." +
		"–î–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ωa —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ " +
		"–Ø–Ω–¥–µ–∫—Å - Yandex SpeechKit. –¢–∞–∫ –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω—è—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Å–Ω–æ–≤–µ, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ " +
		"–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –¥–∞–Ω–Ω–æ–π –æ–∑–≤—É—á–∫–æ–π —Ç–µ–∫—Å—Ç–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ 15 (–¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ—Å—Ç—Ä–æ–≤–∫–∏ - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π, —è –æ–±–Ω—É–ª—é). –î–∞–Ω–Ω—ã–µ –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ –±—ã–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ–ª—è—Ö, " +
		"–∏ –≤—Å–µ–≥–¥–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –∞–Ω–∞–ª–æ–≥–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ api \"–ú–∞—Ä—É—Å–∏\", –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Ç–æ–π " +
		"–∂–µ –æ—Å–Ω–æ–≤–µ, —á—Ç–æ –∏ —É –Ø–Ω–¥–µ–∫—Å–∞. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!\n\n –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º /help")

}

func helper(c tele.Context) error {
	return c.Send("–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üìÉ\n\n–í —Ä–∞–∑–¥–µ–ª–µ \"–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä üñã\" –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ" +
		" —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é \"–°–∫–∞–∑–∫–∞\")\n\n–í —Ä–∞–∑–¥–µ–ª–µ \"–ó–∞–¥–∞—Ç—å –æ–∑–≤—É—á–∫—É üéô\" –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –º–µ–∂–¥—É " +
		"—Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π 5—å—é –∑–∞–ø—Ä–æ—Å–∞–º–∏ –æ–∑–≤—É—á–∫–æ–π Yandex SpeechKit (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é \"–¢–µ–∫—Å—Ç\")\n\n–í " +
		"—Ä–∞–∑–¥–µ–ª–µ \"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üï∂\" –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ —Å–Ω–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ " +
		"–±—ã—Å—Ç—Ä–µ–µ —É—Å–Ω—É—Ç—å\n\n–í —Ä–∞–∑–¥–µ–ª–µ \"–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô\" —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–∏—Ö —Ç–µ–∫—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö " +
		"–ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö\n\n–ò –Ω–∞–∫–æ–Ω–µ—Ü, –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ù–∞–π—Ç–∏ —Å–∫–∑–∞–∫—É üîç\" –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç" +
		" —Ç–æ–≥–æ –∂–∞–Ω—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–Ω –í–∞–º–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ \"–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä üñã\", –∏–ª–∏ –∂–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—Ä—ã–≤–æ–∫ –∏–∑ " +
		"–í–∞—à–µ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è.")
}

func onTaleChoose(ownBtn tele.Btn, ourBtn tele.Btn, cancel tele.Btn) fsm.Handler {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(menu.Row(ownBtn, ourBtn), menu.Row(cancel))
	return func(c tele.Context, state fsm.FSMContext) error {
		state.Set(TaleState)
		return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫—É—é –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –í—ã –ø—Ä–æ—Å–ª—É—à–∞–µ—Ç–µ —Å–µ–≥–æ–¥–Ω—è", menu)
	}
}

func onGenreChoose(tale tele.Btn, poem tele.Btn, drama tele.Btn, cancel tele.Btn) fsm.Handler {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(menu.Row(tale, poem),
		menu.Row(drama, cancel))
	return func(c tele.Context, state fsm.FSMContext) error {
		state.Set(GenreState)
		return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –í–∞—à–µ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", menu)

	}
}

func onSpeechChoose(python tele.Btn, yandex tele.Btn, cancel tele.Btn) fsm.Handler {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(menu.Row(python, yandex),
		menu.Row(cancel))
	return func(c tele.Context, state fsm.FSMContext) error {
		state.Set(SpeakState)
		return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ –æ–∑–≤—É—á–∫—É –í–∞—à–µ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", menu)

	}
}

func onInfoChoose(info tele.Btn, advice tele.Btn, cancel tele.Btn) fsm.Handler {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(menu.Row(info, advice), menu.Row(cancel))
	return func(c tele.Context, state fsm.FSMContext) error {
		state.Set(OtherState)
		return c.Send("–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í–∞–º –±—ã–ª–æ –±—ã –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å", menu)

	}
}

func onCancelForm() fsm.Handler {
	menu := keyboards.OnStartKB()
	return func(c tele.Context, state fsm.FSMContext) error {
		state.Set(OtherState)
		return c.Send("Okay", menu)

	}
}

func setSpeak(speaker string) fsm.Handler {
	menu := keyboards.OnStartKB()
	return func(c tele.Context, state fsm.FSMContext) error {
		repository.UpdateSounder(c.Sender().ID, speaker)
		return c.Send(fmt.Sprintf("–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–æ—Ä–º–∞—Ç: %s", speaker), menu)
	}
}

func setGenre(genre string) fsm.Handler {
	menu := keyboards.OnStartKB()
	return func(c tele.Context, state fsm.FSMContext) error {
		repository.UpdateGenre(c.Sender().ID, genre)
		return c.Send(fmt.Sprintf("–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∂–∞–Ω—Ä %s", genre), menu)
	}
}

func choosingTitle(c tele.Context, state fsm.FSMContext) error {
	title := c.Message().Text
	menu := keyboards.OnStartKB()
	c.Send("–ü—Ä–æ—Å–∏–º –ø—Ä–æ—â–µ–Ω–∏—è, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ –∞—É–¥–∏–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ")
	body := repository.GetUser(c.Sender().ID)
	repository.UpdateBook(c.Sender().ID, title)
	message := usecase.GenerateTale(fmt.Sprintf("–ü—Ä–æ—á–∏—Ç–∞–π –æ—Ç—Ä—ã–≤–æ–∫ –≤ 10 –∞–±–∑–∞—Ü–µ–≤ –∏–∑ %s", title), body)
	if message == "." {
		fileSendler(c, state)
		return nil
	}
	return c.Send(fmt.Sprintf("–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –¥–ª—è –í–∞—Å \"%s.\n\n%s", title, message), menu)
}

func waitOwnState(cancel tele.Btn) fsm.Handler {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(menu.Row(cancel))
	return func(c tele.Context, state fsm.FSMContext) error {
		return c.Send("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä–∞—è –í–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞", menu)
	}
}

func fileSendler(c tele.Context, state fsm.FSMContext) error {
	menu := keyboards.OnStartKB()

	fileCloser(c, state)
	path, _ := os.Getwd()
	err := os.Remove(path + "/temp-folder/file.ogg")
	if err != nil {
		log.Println(err)
		return c.Send("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —É –Ω–∞—Å –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú—ã –æ–±–µ—â–∞–µ–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å—Å—è)", menu)
	}
	return nil
}

func generateTail(c tele.Context, state fsm.FSMContext) error {
	menu := keyboards.OnStartKB()
	body := repository.GetUser(c.Sender().ID)
	c.Send("–ü—Ä–æ—Å–∏–º –ø—Ä–æ—â–µ–Ω–∏—è, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ –∞—É–¥–∏–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ")
	message := usecase.GenerateTale(fmt.Sprintf("–ü—Ä–æ—á–∏—Ç–∞–π —Å–ª—É–∞–π–Ω—É—é %s", body.Genre), body)
	if message == "." {
		fileSendler(c, state)
		return nil
	}
	return c.Send(fmt.Sprintf("–ú—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏ –¥–ª—è –í–∞—Å —ç—Ç–æ: \n\n%s", message), menu)
}

func fileCloser(c tele.Context, state fsm.FSMContext) error {
	path, _ := os.Getwd()
	menu := keyboards.OnStartKB()
	path += "/temp-folder/file.ogg"
	a := &tele.Audio{File: tele.FromDisk(path)}
	log.Println(a.OnDisk())
	if a.OnDisk() {
		c.Send("–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è)")
	}
	return c.Send(a, menu)

}

func userInformation(c tele.Context, state fsm.FSMContext) error {
	body := repository.GetUser(c.Sender().ID)
	menu := keyboards.OnStartKB()
	return c.Send(fmt.Sprintf("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å: \n\n–í–∞—à–µ –∏–º—è üë¶üèª: %s\n–í—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä üé≠: %s\n–í—ã–±—Ä–∞–Ω–Ω–∞—è –æ–∑–≤—É—á–∫–∞"+
		" üîä: %s\n–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ üìö: %s\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π Yandex: %d/5",
		c.Sender().FirstName, body.Genre, body.Sounder, body.Book, body.Counter), menu)
}

func sendInfo(c tele.Context, state fsm.FSMContext) error {
	menu := keyboards.OnStartKB()
	c.Send("–í–æ—Ç –Ω–µ–±–æ–ª—å—à–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º —Å–Ω–µüåò")
	message := "1. 12% –ª—é–¥–µ–π –≤–∏–¥—è—Ç —Å–Ω—ã –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —á–µ—Ä–Ω–æ-–±–µ–ª—ã—Ö —Ç–æ–Ω–∞—Ö, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –¥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏—è" +
		" —Ç–æ–ª—å–∫–æ 15% –ª—é–¥–µ–π –≤–∏–¥–µ–ª–∏ —Å–Ω—ã –≤ —Ü–≤–µ—Ç–µ.\n" +
		"2. –õ—é–¥–∏ —Å–ø—è—Ç 1/3 —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏. –û—á–µ–≤–∏–¥–Ω–æ, —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ —á–µ–ª–æ–≤–µ–∫–∞, –Ω–æ –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ–∫–æ–ª–æ —Ç—Ä–µ—Ç–∏," +
		" —á—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ, –µ—Å–ª–∏ –ø–æ–¥—É–º–∞—Ç—å.\n 3. –°–∞–º—ã–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –±–µ–∑ —Å–Ω–∞ - 11 –¥–Ω–µ–π. –≠—Ç–æ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ " +
		"–∫–∞–ª–∏—Ñ–æ—Ä–Ω–∏–π—Å–∫–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–º –ø–æ –∏–º–µ–Ω–∏ –†—ç–Ω–¥–∏ –ì–∞—Ä–¥–Ω–µ—Ä –≤ 1964 –≥–æ–¥—É. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —ç—Ç–æ –≤ –¥–æ–º–∞—à–Ω–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.\n" +
		"4. –ù–µ—Ä–µ–¥–∫–æ –≥–ª—É—Ö–∏–µ –ª—é–¥–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —è–∑—ã–∫ –∂–µ—Å—Ç–æ–≤ –≤–æ —Å–Ω–µ. –ï—Å—Ç—å –º–Ω–æ–≥–æ —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –ª—é–¥–∏ —Å–æ–æ–±—â–∞–ª–∏ –æ —Å–≤–æ–∏—Ö" +
		" –≥–ª—É—Ö–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö –∏–ª–∏ –¥–µ—Ç—è—Ö, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö —è–∑—ã–∫ –∂–µ—Å—Ç–æ–≤ –≤–æ —Å–Ω–µ.\n" +
		"5. –î–∏—Å–∞–Ω–∏—è ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ–≥–¥–∞ —É—Ç—Ä–æ–º —Ç—Ä—É–¥–Ω–æ –≤—Å—Ç–∞–≤–∞—Ç—å —Å –∫—Ä–æ–≤–∞—Ç–∏. –ú—ã –≤—Å–µ, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –≤—Ä–µ–º—è" +
		" –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Ö–æ—Ç–∏–º –¥–æ–ª—å—à–µ –ø–æ—Å–ø–∞—Å—Ç—å, –Ω–æ —Ç–µ–º, –∫—Ç–æ —Å—Ç—Ä–∞–¥–∞–µ—Ç –æ—Ç –¥–∏—Å–∞–Ω–∏–∏, —ç—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ —Ç—Ä—É–¥–Ω–æ." +
		" –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —ç—Ç–æ —Ñ–æ—Ä–º–∞ —Å–∏–Ω–¥—Ä–æ–º–∞ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–ª–æ—Å—Ç–∏.\n" +
		"6. –ü–∞—Ä–∞—Å–æ–º–Ω–∏—è ‚Äî —Ç–µ—Ä–º–∏–Ω, –æ–±–æ–∑–Ω–∞—á–∞—é—â–∏–π –Ω–µ–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è —Å–Ω–∞. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ –¥–∞–∂–µ" +
		" —Å–æ–≤–µ—Ä—à–∞–ª–∏ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏–∑-–∑–∞ –ø–∞—Ä–∞—Å–æ–º–Ω–∏–∏, –≤–∫–ª—é—á–∞—è –≤–æ–∂–¥–µ–Ω–∏–µ –≤–æ —Å–Ω–µ –∏ –¥–∞–∂–µ —É–±–∏–π—Å—Ç–≤–æ.\n" +
		"7. –°—á–∏—Ç–∞–µ—Ç—Å—è, —á—Ç–æ –¥–æ 15% –Ω–∞—Å–µ–ª–µ–Ω–∏—è ‚Äî –ª—É–Ω–∞—Ç–∏–∫–∏. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–µ–Ω–∏–µ, —á—Ç–æ –Ω–µ–ª—å–∑—è –±—É–¥–∏—Ç—å –∫–æ–≥–æ-—Ç–æ," +
		" –∫—Ç–æ —Ö–æ–¥–∏—Ç –≤–æ —Å–Ω–µ, –Ω–æ —ç—Ç–æ –Ω–µ –±–æ–ª–µ–µ, —á–µ–º –º–∏—Ñ. 10. –ö–∞–∂–¥–∞—è —á–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—É–ø—Ä—É–∂–µ—Å–∫–∞—è –ø–∞—Ä–∞ —Å–ø–∏—Ç –≤ —Ä–∞–∑–Ω—ã—Ö –∫—Ä–æ–≤–∞—Ç—è—Ö.\n" +
		"8. –õ–∏—à–µ–Ω–∏–µ —Å–Ω–∞ —É–±–∏–≤–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –ª–∏—à–µ–Ω–∏–µ –ø–∏—â–∏.\n" +
		"9. –¢–µ, –∫—Ç–æ —Ä–æ–¥–∏–ª—Å—è —Å–ª–µ–ø—ã–º, –ø–µ—Ä–µ–∂–∏–≤–∞—é—Ç —Å–Ω—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ç–∞–∫–∏–º–∏ –≤–µ—â–∞–º–∏, –∫–∞–∫ —ç–º–æ—Ü–∏–∏, –∑–≤—É–∫, –∑–∞–ø–∞—Ö, –∞ –Ω–µ –∑—Ä–µ–Ω–∏–µ."
	return c.Send(message, menu)
}

func sendAdvice(c tele.Context, state fsm.FSMContext) error {
	menu := keyboards.OnStartKB()
	c.Send("–ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –∫–∞–∫ –±—ã—Å—Ç—Ä–µ–µ —É—Å–Ω—É—Ç—åüò¥:")
	message := "1. –ù–µ –µ—à—å—Ç–µ –ø—Ä—è–º–æ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ª–æ–∂–∏—Ç—å—Å—è —Å–ø–∞—Ç—å.\n2. –ü–æ–∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–µ–π –π–æ–≥–æ–π.\n3. –ü—Ä–æ–≤–µ—Ç—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É." +
		"\n4. –°–ø—Ä—è—á—å—Ç–µ —á–∞—Å—ã, —á—Ç–æ–±—ã –Ω–µ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ω–∏—Ö, –ø–æ–∫–∞ –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∑–∞—Å–Ω—É—Ç—å.\n5. –£–±–µ—Ä–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–∞–ª—å—à–µ –æ—Ç –∫—Ä–æ–≤–∞—Ç–∏." +
		"\n6. –ü–µ—Ä–µ–¥ —Å–Ω–æ–º –ø—Ä–∏–º–∏—Ç–µ –≥–æ—Ä—è—á–∏–π –¥—É—à –∏–ª–∏ –≤–∞–Ω–Ω—É.\n7. –°–ø–∏—Ç–µ –≤ –Ω–æ—Å–∫–∞—Ö."
	return c.Send(message, menu)
}

func sendAdmin(c tele.Context) error {
	admin, _ := strconv.Atoi(os.Getenv("ADMIN"))
	if c.Sender().ID != int64(admin) {
		return c.Send("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
	}
	userCount, yandexCount := repository.GetAdminInfo()
	return c.Send(fmt.Sprintf("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: %d\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –Ø–Ω–¥–µ–∫—Å–∞: %d",
		userCount, yandexCount), keyboards.AdminKB())
}

func massSender(ids []int64, message string, c tele.Context, state fsm.FSMContext) {
	tmp := c.Chat().ID
	for i := 0; i < len(ids); i++ {
		c.Chat().ID = ids[i]
		c.Send(message)
	}
	c.Chat().ID = tmp
}

func yandexToZero(c tele.Context, state fsm.FSMContext) error {
	menu := keyboards.OnStartKB()
	idArray := repository.GetAllId(true)
	massSender(idArray, "–í–∞–º –æ–±–Ω—É–ª–∏–ª–∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π Yandex SpeechKit. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ)", c, state)
	return c.Send("–ì–æ—Ç–æ–≤–æ, –º–æ–π –≥–æ—Å–ø–æ–¥–∏–Ω", menu)
}

func startSendler(cancel tele.Btn) fsm.Handler {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	menu.Reply(menu.Row(cancel))
	return func(c tele.Context, state fsm.FSMContext) error {
		state.Set(AdminState)
		return c.Send("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏", menu)

	}
}

func sendler(c tele.Context, state fsm.FSMContext) error {
	message := c.Message().Text
	menu := keyboards.OnStartKB()
	idArray := repository.GetAllId(false)
	massSender(idArray, message, c, state)
	return c.Send("–ì–æ—Ç–æ–≤–æ, –º–æ–π –≥–æ—Å–ø–æ–¥–∏–Ω", menu)
}
